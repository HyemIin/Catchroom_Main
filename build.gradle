plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//aws secretkey 사용을 위한 의존성 추가
	implementation 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.8'
	implementation 'software.amazon.awssdk:s3:2.17.100'

	//jpa 사용을 위한 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
}

task createTargetDir {
	doLast {
		file('target').mkdirs()
	}
}

tasks.named('build') {
	dependsOn createTargetDir
}



tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

task buildZip(type: Zip) {
	from 'build/libs'
	include '*.jar'
	from '.'
	include 'appspec.yml'
	include 'deploy.sh'
}



tasks.named('test') {
	useJUnitPlatform()
}
